name: Deploy Terraform to Azure

on:
  push:
    branches:
      - actions

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_OIDC: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
        addSpnToEnvironment: true

    - name: List all Resource Groups
    run: az group list --output table
    env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    # - name: Terraform Init
    #   run: terraform init
    #   run: terraform init
    #   env:
    #     ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
    #     ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
    #     ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    #     ARM_USE_OIDC: "true"

    # - name: Terraform Apply
    #   run: terraform apply -auto-approve

    #   - task: AzureCLI@2displayName: "Terraform"inputs:azureSubscription:  shared-${{ parameters.environment }}-001scriptType: bashaddSpnToEnvironment: truescriptLocation: inlineScriptinlineScript: |
    #   export ARM_CLIENT_ID=$servicePrincipalId
    #   export ARM_CLIENT_SECRET=$servicePrincipalKey
    #   export ARM_TENANT_ID=$tenantIdterraform init 
    